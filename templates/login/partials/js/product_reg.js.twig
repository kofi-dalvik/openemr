<script src="{{ webroot|attr }}/interface/product_registration/product_registration_service.js?v={{ assetVersion|attr_url }}"></script>
<script src="{{ webroot|attr }}/interface/product_registration/product_registration_controller.js?v={{ assetVersion|attr_url }}"></script>
<script type="text/javascript">
    const registrationTranslations = {{ regTranslations }};
    const registrationConstants = {{ regConstants }};

    document.addEventListener('DOMContentLoaded', () => {
        document.getElementById('authUser').focus();

        // Get the password input and the toggle button
        const togglePass = document.getElementById('toggle-pass');
        const clearPass = document.getElementById('clearPass');
        let typingTimeout;

        // Add event listener to the toggle button
        togglePass.addEventListener('click', (e) => {
            e.preventDefault();
            const type = clearPass.getAttribute('type') === 'password' ? 'text' : 'password';
            clearPass.setAttribute('type', type);
            togglePass.textContent = type === 'password' ? 'Show Password' : 'Hide Password';
        });

        // Add event listener to the password input
        clearPass.addEventListener('input', (e) => {
            clearTimeout(typingTimeout);

            if (clearPass.getAttribute('type') === 'text') {
                return;
            }

            // create a mask and replace the password value with it
            clearPass.setAttribute('type', 'text');
            const passValue = clearPass.value;
            const mask = Array(passValue.length - 1).fill('â€¢').join('')
            clearPass.value = mask + passValue.slice(-1);

            // Set a timeout to remove the mask after 200ms
            typingTimeout = setTimeout(() => {
                clearPass.setAttribute('type', 'password');
                clearPass.value = passValue;
            }, 200);
        });
    });

    $(document).ready(init());

    function init() {
        var productRegistrationController = new ProductRegistrationController();
        productRegistrationController.getProductRegistrationStatus(function (err, data) {
            if (err) { return; }

            if (data.statusAsString === 'UNREGISTERED') {
                productRegistrationController.showProductRegistrationModal();
            }
        });
    }

    function transmit_form(element) {
        // disable submit button to insert a notification of working
        element.disabled = true;
        // nothing fancy. mainly for mobile.
        element.innerHTML = '<i class="fa fa-circle-notch fa-spin mx-1"></i><span class="sr-only">' + jsText({{ "Authenticating"|xlj }}) + '</span>';
        {% if hasSession %}
        document.cookie = {{ cookieText }};
        {% endif %}
        document.forms[0].submit();
        return true;
    }
</script>
